name: Build Executables

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
    env:
      MAIN_SPEC_FILE: 'main.spec'  # Define the path to your main.spec file here
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.4
      - name: Install esptool
        run: |
          pip install esptool
        working-directory: ./
      - name: Create virtual environment
        run: |
          python -m venv venv
      - name: Activate virtual environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          venv\Scripts\activate.bat
      - name: Activate virtual environment (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          source venv/bin/activate
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
        working-directory: ./
      - name: Install PyInstaller
        run: |
          pip install pyinstaller
        working-directory: ./
      - name: Build executable
        run: |
          pyinstaller ${{ env.MAIN_SPEC_FILE }}
        working-directory: ./
      - name: Upload Release Assets
        uses: actions/upload-artifact@v3
        with:
          name: release-assets-${{ matrix.os }}
          path: dist/
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name="${GITHUB_REF##*/}"
          release_name="Release $tag_name"
          release_body="This is the release $tag_name"
          assets=()
          for asset in ./dist/*; do
            assets+=("--attach=$asset")
          done
          gh release create "$tag_name" --title="$release_name" --notes="$release_body" "${assets[@]}"