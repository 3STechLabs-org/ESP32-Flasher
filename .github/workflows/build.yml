name: Build binaries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            platform: x64
          - os: windows-latest
            platform: arm
          - os: ubuntu-latest
            platform: x64
          - os: macos-latest
            platform: arm64
    env:
      PLATFORM: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt  # Assuming you have a requirements.txt file

      - name: Build with PyInstaller
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            pyinstaller --clean --onefile --distpath dist/windows main.spec
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pyinstaller --clean --onefile --distpath dist/macos main.spec
          else
            pyinstaller --clean --onefile --distpath dist/linux main.spec
        shell: bash

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-binaries
          path: |
            dist/windows/*.exe
            dist/macos/*
            dist/linux/*

      - name: Save binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.platform }}-binaries
          path: dist/