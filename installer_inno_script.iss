; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define MyAppName "ESP32 Flasher"
#define MyAppVersion "1.0"
#define MyAppPublisher "3STechLabs"
#define MyAppURL "(link unavailable)"
#define MyAppExeName "main.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".exe"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt
[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{2BCD040A-7D6D-42D5-B3EA-5A61EA209E18}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
OutputBaseFilename=mysetup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
[Files]
Source: "D:\3STechLabs\werqwise\esp_flasher\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\3STechLabs\werqwise\esp_flasher\esp_env\Lib\site-packages*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
[Registry]
Root: HKA; Subkey: "Software\Classes{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""
[Run]
Filename: "{app}{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
[Code]
[Code]
const
  PythonInstallerURL = 'https://www.python.org/ftp/python/3.9.7/python-3.9.7-amd64.exe';

var
  PythonInstallerPath: string;

procedure DownloadPythonInstaller;
var
  Downloader: TDownloadURL;
begin
  Log('Downloading Python installer from: ' + PythonInstallerURL);
  Downloader := TDownloadURL.Create(nil);
  try
    Downloader.URL := PythonInstallerURL;
    Downloader.Filename := PythonInstallerPath;
    Downloader.OnProgress := @DownloadProgress;
    Downloader.Download;
    if Downloader.StatusCode <> 200 then
    begin
      MsgBox('Failed to download Python installer. Please make sure you have an active internet connection.', mbError, MB_OK);
      Abort;
    end;
  finally
    Downloader.Free;
  end;
end;

procedure DownloadProgress(Sender: TObject; Progress, MaxProgress: Integer);
begin
  // You can implement a progress bar or update the user interface here
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  if CurStep = ssPostInstall then
  begin
    // Check if Python is installed
    if not FileExists(ExpandConstant('{sys}\python.exe')) then
    begin
      // Set Python installer path
      PythonInstallerPath := ExpandConstant('{tmp}\python_installer.exe');
      
      // Download Python installer
      DownloadPythonInstaller;

      // Install Python
      if Exec(PythonInstallerPath, '/quiet', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
      begin
        if ResultCode <> 0 then
        begin
          MsgBox('Failed to install Python. Please install Python manually before continuing with the installation.', mbError, MB_OK);
          Abort;
        end;
      end
      else
      begin
        MsgBox('Failed to execute Python installer.', mbError, MB_OK);
        Abort;
      end;
    end;

    // Proceed with installing pip3 and esptool
    // (Remaining code for installing pip3 and esptool remains the same)
  end;
end;
